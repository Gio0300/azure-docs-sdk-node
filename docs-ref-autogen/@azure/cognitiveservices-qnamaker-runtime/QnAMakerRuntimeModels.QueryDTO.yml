### YamlMime:TSType
name: QueryDTO
uid: '@azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO'
package: '@azure/cognitiveservices-qnamaker-runtime'
summary: POST body schema to query the knowledgebase.
fullName: QueryDTO
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: context
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.context
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Context object with previous QnA's information.
    fullName: context
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'context?: QueryDTOContext'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTOContext"
          />
  - name: isTest
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.isTest
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Query against the test index.
    fullName: isTest
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isTest?: boolean'
      return:
        description: ''
        type: boolean
  - name: qnaId
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.qnaId
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: >-
      Exact qnaId to fetch from the knowledgebase, this field takes priority
      over question.
    fullName: qnaId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'qnaId?: string'
      return:
        description: ''
        type: string
  - name: question
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.question
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: User question to query against the knowledge base.
    fullName: question
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'question?: string'
      return:
        description: ''
        type: string
  - name: rankerType
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.rankerType
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Optional field. Set to 'QuestionOnly' for using a question only Ranker.
    fullName: rankerType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rankerType?: string'
      return:
        description: ''
        type: string
  - name: scoreThreshold
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.scoreThreshold
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Threshold for answers returned based on score.
    fullName: scoreThreshold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scoreThreshold?: number'
      return:
        description: ''
        type: number
  - name: strictFilters
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.strictFilters
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Find only answers that contain these metadata.
    fullName: strictFilters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strictFilters?: MetadataDTO[]'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.MetadataDTO"
          />[]
  - name: top
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.top
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Max number of answers to be returned for the question.
    fullName: top
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'top?: number'
      return:
        description: ''
        type: number
  - name: userId
    uid: >-
      @azure/cognitiveservices-qnamaker-runtime.QnAMakerRuntimeModels.QueryDTO.userId
    package: '@azure/cognitiveservices-qnamaker-runtime'
    summary: Unique identifier for the user.
    fullName: userId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userId?: string'
      return:
        description: ''
        type: string
