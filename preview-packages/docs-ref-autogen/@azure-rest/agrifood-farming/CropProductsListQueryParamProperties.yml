### YamlMime:TSType
name: CropProductsListQueryParamProperties
uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties'
package: '@azure-rest/agrifood-farming'
summary: ''
fullName: CropProductsListQueryParamProperties
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: brands
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.brands'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Brands of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: brands
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'brands?: string'
      return:
        description: ''
        type: string
  - name: cropIds
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.cropIds'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      CropIds of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: cropIds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'cropIds?: string'
      return:
        description: ''
        type: string
  - name: ids
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.ids'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Ids of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: ids
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ids?: string'
      return:
        description: ''
        type: string
  - name: maxCreatedDateTime
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.maxCreatedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Maximum creation date of resource (inclusive).
    fullName: maxCreatedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxCreatedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: maxLastModifiedDateTime
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.maxLastModifiedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Maximum last modified date of resource (inclusive).
    fullName: maxLastModifiedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxLastModifiedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: maxPageSize
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.maxPageSize
    package: '@azure-rest/agrifood-farming'
    summary: |-
      Maximum number of items needed (inclusive).
      Minimum = 10, Maximum = 1000, Default value = 50.
    fullName: maxPageSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxPageSize?: number'
      return:
        description: ''
        type: number
  - name: minCreatedDateTime
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.minCreatedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Minimum creation date of resource (inclusive).
    fullName: minCreatedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minCreatedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: minLastModifiedDateTime
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.minLastModifiedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Minimum last modified date of resource (inclusive).
    fullName: minLastModifiedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minLastModifiedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: names
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.names'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Names of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: names
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'names?: string'
      return:
        description: ''
        type: string
  - name: products
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.products'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Products of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: products
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'products?: string'
      return:
        description: ''
        type: string
  - name: propertyFilters
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.propertyFilters
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Filters on key-value pairs within the Properties object.

      eg. "{testKey} eq {testValue}". This parameter needs to be formatted as
      multi collection, we provide buildMultiCollection from serializeHelper.ts
      to help, you will probably need to set skipUrlEncoding as true when
      sending the request
    fullName: propertyFilters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'propertyFilters?: string'
      return:
        description: ''
        type: string
  - name: skipToken
    uid: >-
      @azure-rest/agrifood-farming.CropProductsListQueryParamProperties.skipToken
    package: '@azure-rest/agrifood-farming'
    summary: Skip token for getting next set of results.
    fullName: skipToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'skipToken?: string'
      return:
        description: ''
        type: string
  - name: statuses
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.statuses'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Statuses of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: statuses
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'statuses?: string'
      return:
        description: ''
        type: string
  - name: traits
    uid: '@azure-rest/agrifood-farming.CropProductsListQueryParamProperties.traits'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Traits of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: traits
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'traits?: string'
      return:
        description: ''
        type: string
