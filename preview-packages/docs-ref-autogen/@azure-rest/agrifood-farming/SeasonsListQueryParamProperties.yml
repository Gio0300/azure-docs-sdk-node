### YamlMime:TSType
name: SeasonsListQueryParamProperties
uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties'
package: '@azure-rest/agrifood-farming'
summary: ''
fullName: SeasonsListQueryParamProperties
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: ids
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.ids'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Ids of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: ids
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ids?: string'
      return:
        description: ''
        type: string
  - name: maxCreatedDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.maxCreatedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Maximum creation date of resource (inclusive).
    fullName: maxCreatedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxCreatedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: maxEndDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.maxEndDateTime
    package: '@azure-rest/agrifood-farming'
    summary: 'Maximum season end datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.'
    fullName: maxEndDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxEndDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: maxLastModifiedDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.maxLastModifiedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Maximum last modified date of resource (inclusive).
    fullName: maxLastModifiedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxLastModifiedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: maxPageSize
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.maxPageSize'
    package: '@azure-rest/agrifood-farming'
    summary: |-
      Maximum number of items needed (inclusive).
      Minimum = 10, Maximum = 1000, Default value = 50.
    fullName: maxPageSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxPageSize?: number'
      return:
        description: ''
        type: number
  - name: maxStartDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.maxStartDateTime
    package: '@azure-rest/agrifood-farming'
    summary: 'Maximum season start datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.'
    fullName: maxStartDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxStartDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: minCreatedDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.minCreatedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Minimum creation date of resource (inclusive).
    fullName: minCreatedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minCreatedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: minEndDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.minEndDateTime
    package: '@azure-rest/agrifood-farming'
    summary: 'Minimum season end datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.'
    fullName: minEndDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minEndDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: minLastModifiedDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.minLastModifiedDateTime
    package: '@azure-rest/agrifood-farming'
    summary: Minimum last modified date of resource (inclusive).
    fullName: minLastModifiedDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minLastModifiedDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: minStartDateTime
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.minStartDateTime
    package: '@azure-rest/agrifood-farming'
    summary: 'Minimum season start datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.'
    fullName: minStartDateTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minStartDateTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: names
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.names'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Names of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: names
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'names?: string'
      return:
        description: ''
        type: string
  - name: propertyFilters
    uid: >-
      @azure-rest/agrifood-farming.SeasonsListQueryParamProperties.propertyFilters
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Filters on key-value pairs within the Properties object.

      eg. "{testKey} eq {testValue}". This parameter needs to be formatted as
      multi collection, we provide buildMultiCollection from serializeHelper.ts
      to help, you will probably need to set skipUrlEncoding as true when
      sending the request
    fullName: propertyFilters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'propertyFilters?: string'
      return:
        description: ''
        type: string
  - name: skipToken
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.skipToken'
    package: '@azure-rest/agrifood-farming'
    summary: Skip token for getting next set of results.
    fullName: skipToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'skipToken?: string'
      return:
        description: ''
        type: string
  - name: statuses
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.statuses'
    package: '@azure-rest/agrifood-farming'
    summary: >-
      Statuses of the resource. This parameter needs to be formatted as multi
      collection, we provide buildMultiCollection from serializeHelper.ts to
      help, you will probably need to set skipUrlEncoding as true when sending
      the request
    fullName: statuses
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'statuses?: string'
      return:
        description: ''
        type: string
  - name: years
    uid: '@azure-rest/agrifood-farming.SeasonsListQueryParamProperties.years'
    package: '@azure-rest/agrifood-farming'
    summary: Years of the resource.
    fullName: years
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'years?: number[]'
      return:
        description: ''
        type: number[]
