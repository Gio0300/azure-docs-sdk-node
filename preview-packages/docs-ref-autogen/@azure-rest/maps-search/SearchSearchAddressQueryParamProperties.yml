### YamlMime:TSType
name: SearchSearchAddressQueryParamProperties
uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties'
package: '@azure-rest/maps-search'
summary: ''
fullName: SearchSearchAddressQueryParamProperties
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: btmRight
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.btmRight'
    package: '@azure-rest/maps-search'
    summary: Bottom right position of the bounding box. E.g. 37.553,-122.453
    fullName: btmRight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'btmRight?: string'
      return:
        description: ''
        type: string
  - name: countrySet
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.countrySet'
    package: '@azure-rest/maps-search'
    summary: >-
      Comma separated string of country codes, e.g. FR,ES. This will limit the
      search to the specified countries
    fullName: countrySet
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'countrySet?: string[]'
      return:
        description: ''
        type: string[]
  - name: entityType
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.entityType'
    package: '@azure-rest/maps-search'
    summary: >-
      Specifies the level of filtering performed on geographies. Narrows the
      search for specified geography entity types, e.g. return only
      municipality. The resulting response will contain the geography ID as well
      as the entity type matched. If you provide more than one entity as a comma
      separated list, endpoint will return the 'smallest entity available'.
      Returned Geometry ID can be used to get the geometry of that geography via
      [Get Search
      Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon)
      API. The following parameters are ignored when entityType is set:


      * heading

      * number

      * returnRoadUse

      * returnSpeedLimit

      * roadUse

      * returnMatchType
    fullName: entityType
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        entityType?: "Country" | "CountrySubdivision" |
        "CountrySecondarySubdivision" | "CountryTertiarySubdivision" |
        "Municipality" | "MunicipalitySubdivision" | "Neighbourhood" |
        "PostalCodeArea"
      return:
        description: ''
        type: >-
          "Country" | "CountrySubdivision" | "CountrySecondarySubdivision" |
          "CountryTertiarySubdivision" | "Municipality" |
          "MunicipalitySubdivision" | "Neighbourhood" | "PostalCodeArea"
  - name: extendedPostalCodesFor
    uid: >-
      @azure-rest/maps-search.SearchSearchAddressQueryParamProperties.extendedPostalCodesFor
    package: '@azure-rest/maps-search'
    summary: >-
      Indexes for which extended postal codes should be included in the results.


      Available indexes are:

       **Addr** = Address ranges

       **Geo** = Geographies

       **PAD** = Point Addresses

       **POI** = Points of Interest

       **Str** = Streets

       **XStr** = Cross Streets (intersections)

      Value should be a comma separated list of index types (in any order) or
      **None** for no indexes.


      By default extended postal codes are included for all indexes except Geo.
      Extended postal code lists for geographies can be quite long so they have
      to be explicitly requested when needed.


      Usage examples:

       extendedPostalCodesFor=POI

       extendedPostalCodesFor=PAD,Addr,POI

       extendedPostalCodesFor=None

      Extended postal code is returned as an **extendedPostalCode** property of
      an address. Availability is region-dependent.
    fullName: extendedPostalCodesFor
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        extendedPostalCodesFor?: ("POI" | "Addr" | "Geo" | "PAD" | "Str" |
        "Xstr")[]
      return:
        description: ''
        type: ("POI" | "Addr" | "Geo" | "PAD" | "Str" | "Xstr")[]
  - name: language
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.language'
    package: '@azure-rest/maps-search'
    summary: >-
      Language in which search results should be returned. Should be one of
      supported IETF language tags, case insensitive. When data in specified
      language is not available for a specific field, default language is used.


      Please refer to [Supported
      Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages)
      for details.
    fullName: language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'language?: string'
      return:
        description: ''
        type: string
  - name: lat
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.lat'
    package: '@azure-rest/maps-search'
    summary: Latitude where results should be biased. E.g. 37.337
    fullName: lat
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lat?: number'
      return:
        description: ''
        type: number
  - name: limit
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.limit'
    package: '@azure-rest/maps-search'
    summary: >-
      Maximum number of responses that will be returned. Default: 10, minimum: 1
      and maximum: 100
    fullName: limit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'limit?: number'
      return:
        description: ''
        type: number
  - name: lon
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.lon'
    package: '@azure-rest/maps-search'
    summary: Longitude where results should be biased. E.g. -121.89
    fullName: lon
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lon?: number'
      return:
        description: ''
        type: number
  - name: ofs
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.ofs'
    package: '@azure-rest/maps-search'
    summary: >-
      Starting offset of the returned results within the full result set.
      Default: 0, minimum: 0 and maximum: 1900
    fullName: ofs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ofs?: number'
      return:
        description: ''
        type: number
  - name: query
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.query'
    package: '@azure-rest/maps-search'
    summary: >-
      The address to search for (e.g., "1 Microsoft way, Redmond, WA"), must be
      properly URL encoded.
    fullName: query
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'query: string'
      return:
        description: ''
        type: string
  - name: radius
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.radius'
    package: '@azure-rest/maps-search'
    summary: >-
      The radius in meters to for the results to be constrained to the defined
      area
    fullName: radius
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'radius?: number'
      return:
        description: ''
        type: number
  - name: topLeft
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.topLeft'
    package: '@azure-rest/maps-search'
    summary: Top left position of the bounding box. E.g. 37.553,-122.453
    fullName: topLeft
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'topLeft?: string'
      return:
        description: ''
        type: string
  - name: typeahead
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.typeahead'
    package: '@azure-rest/maps-search'
    summary: >-
      Boolean. If the typeahead flag is set, the query will be interpreted as a
      partial input and the search will enter predictive mode
    fullName: typeahead
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'typeahead?: boolean'
      return:
        description: ''
        type: boolean
  - name: view
    uid: '@azure-rest/maps-search.SearchSearchAddressQueryParamProperties.view'
    package: '@azure-rest/maps-search'
    summary: >-
      The View parameter (also called the "user region" parameter) allows you to
      show the correct maps for a certain country/region for geopolitically
      disputed regions. Different countries/regions have different views of such
      regions, and the View parameter allows your application to comply with the
      view required by the country/region your application will be serving. By
      default, the View parameter is set to “Unified” even if you haven’t
      defined it in  the request. It is your responsibility to determine the
      location of your users, and then set the View parameter correctly for that
      location. Alternatively, you have the option to set ‘View=Auto’, which
      will return the map data based on the IP  address of the request. The View
      parameter in Azure Maps must be used in compliance with applicable laws,
      including those  regarding mapping, of the country/region where maps,
      images and other data and third party content that you are authorized to 
      access via Azure Maps is made available. Example: view=IN.


      Please refer to [Supported
      Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see
      the available Views.
    fullName: view
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        view?: "AE" | "AR" | "BH" | "IN" | "IQ" | "JO" | "KW" | "LB" | "MA" |
        "OM" | "PK" | "PS" | "QA" | "SA" | "SY" | "YE" | "Auto" | "Unified"
      return:
        description: ''
        type: >-
          "AE" | "AR" | "BH" | "IN" | "IQ" | "JO" | "KW" | "LB" | "MA" | "OM" |
          "PK" | "PS" | "QA" | "SA" | "SY" | "YE" | "Auto" | "Unified"
