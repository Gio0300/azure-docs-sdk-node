### YamlMime:TSType
name: CbsClient
uid: '@azure/amqp-common.CbsClient'
package: '@azure/amqp-common'
summary: ''
fullName: CbsClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CbsClient(Connection, string)
    uid: '@azure/amqp-common.CbsClient.constructor'
    package: '@azure/amqp-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new CbsClient(connection: Connection, connectionLock: string)'
      parameters:
        - id: connection
          type: Connection
          description: The AMQP conection.
        - id: connectionLock
          type: string
          description: A unique string (usually a guid) per connection.
properties:
  - name: cbsLock
    uid: '@azure/amqp-common.CbsClient.cbsLock'
    package: '@azure/amqp-common'
    summary: >-
      The unqiue lock name per $cbs session per connection that is used to

      acquire the lock for establishing a cbs session if one does not exist for
      an aqmp connection.
    fullName: cbsLock
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'cbsLock: string'
      return:
        description: ''
        type: string
  - name: connection
    uid: '@azure/amqp-common.CbsClient.connection'
    package: '@azure/amqp-common'
    summary: The AMQP connection.
    fullName: connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connection: Connection'
      return:
        description: ''
        type: Connection
  - name: connectionLock
    uid: '@azure/amqp-common.CbsClient.connectionLock'
    package: '@azure/amqp-common'
    summary: >-
      The unqiue lock name per connection that is used to

      acquire the lock for establishing an amqp connection if one does not
      exist.
    fullName: connectionLock
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connectionLock: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/amqp-common.CbsClient.endpoint'
    package: '@azure/amqp-common'
    summary: CBS endpoint - "$cbs"
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: replyTo
    uid: '@azure/amqp-common.CbsClient.replyTo'
    package: '@azure/amqp-common'
    summary: CBS replyTo - The reciever link name that the service should reply to.
    fullName: replyTo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'replyTo: string'
      return:
        description: ''
        type: string
methods:
  - name: close()
    uid: '@azure/amqp-common.CbsClient.close'
    package: '@azure/amqp-common'
    summary: |-
      Closes the AMQP cbs session to the EventHub/ServiceBus for this client,
      returning a promise that will be resolved when disconnection is completed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function close(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: init()
    uid: '@azure/amqp-common.CbsClient.init'
    package: '@azure/amqp-common'
    summary: >-
      Creates a singleton instance of the CBS session if it hasn't been
      initialized previously on

      the given connection.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function init(): Promise<void>'
      return:
        description: Promise<void>.
        type: Promise&lt;void&gt;
  - name: negotiateClaim(string, TokenInfo)
    uid: '@azure/amqp-common.CbsClient.negotiateClaim'
    package: '@azure/amqp-common'
    summary: Negotiates the CBS claim with the EventHub/ServiceBus Service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function negotiateClaim(audience: string, tokenObject: TokenInfo):
        Promise<CbsResponse>
      parameters:
        - id: audience
          type: string
          description: |-
            The entity token audience for which the token is requested in one
            of the following forms:

            - **ServiceBus**
               - **Sender**
                   - `"sb://<yournamespace>.servicebus.windows.net/<queue-name>"`
                   - `"sb://<yournamespace>.servicebus.windows.net/<topic-name>"`

               - **Receiver**
                    - `"sb://<yournamespace>.servicebus.windows.net/<queue-name>"`
                    - `"sb://<yournamespace>.servicebus.windows.net/<topic-name>"`

               - **ManagementClient**
                    - `"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management"`.
                    - `"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management"`.

            - **EventHubs**
                - **Sender**
                     - `"sb://<yournamespace>.servicebus.windows.net/<hubName>"`
                     - `"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>"`.

                - **Receiver**
                    - `"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>"`.

                - **ManagementClient**
                    - `"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management"`.
        - id: tokenObject
          type: <xref uid="@azure/amqp-common.TokenInfo" />
          description: The token object that needs to be sent in the put-token request.
      return:
        description: |-
          Returns a Promise that resolves when $cbs authentication is successful
          and rejects when an error occurs during $cbs authentication.
        type: Promise&lt;<xref uid="@azure/amqp-common.CbsResponse" />&gt;
  - name: remove()
    uid: '@azure/amqp-common.CbsClient.remove'
    package: '@azure/amqp-common'
    summary: Removes the AMQP cbs session to the EventHub/ServiceBus for this client,
    remarks: ''
    isDeprecated: false
    syntax:
      content: function remove()
