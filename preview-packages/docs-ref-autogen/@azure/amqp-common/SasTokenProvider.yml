### YamlMime:TSType
name: SasTokenProvider
uid: '@azure/amqp-common.SasTokenProvider'
package: '@azure/amqp-common'
summary: ''
fullName: SasTokenProvider
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: SasTokenProvider(string, string, string, number, number)
    uid: '@azure/amqp-common.SasTokenProvider.constructor'
    package: '@azure/amqp-common'
    summary: Initializes a new instance of SasTokenProvider
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new SasTokenProvider(namespace: string, keyName: string, key: string,
        tokenValidTimeInSeconds?: number, tokenRenewalMarginInSeconds?: number)
      parameters:
        - id: namespace
          type: string
          description: The namespace of the EventHub/ServiceBus instance.
        - id: keyName
          type: string
          description: The name of the EventHub/ServiceBus key.
        - id: key
          type: string
          description: The secret value associated with the above EventHub/ServiceBus key
        - id: tokenValidTimeInSeconds
          type: number
          description: ''
        - id: tokenRenewalMarginInSeconds
          type: number
          description: ''
properties:
  - name: key
    uid: '@azure/amqp-common.SasTokenProvider.key'
    package: '@azure/amqp-common'
    summary: The secret value associated with the above EventHub/ServiceBus key.
    fullName: key
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'key: string'
      return:
        description: ''
        type: string
  - name: keyName
    uid: '@azure/amqp-common.SasTokenProvider.keyName'
    package: '@azure/amqp-common'
    summary: The name of the EventHub/ServiceBus key.
    fullName: keyName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'keyName: string'
      return:
        description: ''
        type: string
  - name: namespace
    uid: '@azure/amqp-common.SasTokenProvider.namespace'
    package: '@azure/amqp-common'
    summary: The namespace of the EventHub/ServiceBus instance.
    fullName: namespace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'namespace: string'
      return:
        description: ''
        type: string
  - name: tokenRenewalMarginInSeconds
    uid: '@azure/amqp-common.SasTokenProvider.tokenRenewalMarginInSeconds'
    package: '@azure/amqp-common'
    summary: |-
      The number of seconds within which it
      is good to renew the token. Default = 900 seconds (15 minutes).
    fullName: tokenRenewalMarginInSeconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tokenRenewalMarginInSeconds: number'
      return:
        description: ''
        type: number
  - name: tokenValidTimeInSeconds
    uid: '@azure/amqp-common.SasTokenProvider.tokenValidTimeInSeconds'
    package: '@azure/amqp-common'
    summary: |-
      The number of seconds for which the token
      is valid. Default = 3600 seconds (1 hour).
    fullName: tokenValidTimeInSeconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tokenValidTimeInSeconds: number'
      return:
        description: ''
        type: number
methods:
  - name: fromConnectionString(string)
    uid: '@azure/amqp-common.SasTokenProvider.fromConnectionString'
    package: '@azure/amqp-common'
    summary: Creates a token provider from the EventHub/ServiceBus connection string;
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string):
        SasTokenProvider
      parameters:
        - id: connectionString
          type: string
          description: The EventHub/ServiceBus connection string
      return:
        description: ''
        type: <xref uid="@azure/amqp-common.SasTokenProvider" />
  - name: getToken(string)
    uid: '@azure/amqp-common.SasTokenProvider.getToken'
    package: '@azure/amqp-common'
    summary: Gets the sas token for the specified audience
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getToken(audience?: string): Promise<TokenInfo>'
      parameters:
        - id: audience
          type: string
          description: >-
            The audience for which the token is desired. If not

            provided then the Endpoint from the connection string will be
            applied.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/amqp-common.TokenInfo" />&gt;
