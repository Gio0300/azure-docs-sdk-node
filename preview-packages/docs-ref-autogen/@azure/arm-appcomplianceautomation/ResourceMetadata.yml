### YamlMime:TSType
name: ResourceMetadata
uid: '@azure/arm-appcomplianceautomation.ResourceMetadata'
package: '@azure/arm-appcomplianceautomation'
summary: Single resource Id's metadata.
fullName: ResourceMetadata
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: resourceId
    uid: '@azure/arm-appcomplianceautomation.ResourceMetadata.resourceId'
    package: '@azure/arm-appcomplianceautomation'
    summary: >-
      Resource Id - e.g.
      "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
    fullName: resourceId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceId: string'
      return:
        description: ''
        type: string
  - name: resourceKind
    uid: '@azure/arm-appcomplianceautomation.ResourceMetadata.resourceKind'
    package: '@azure/arm-appcomplianceautomation'
    summary: Resource kind.
    fullName: resourceKind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceKind?: string'
      return:
        description: ''
        type: string
  - name: resourceName
    uid: '@azure/arm-appcomplianceautomation.ResourceMetadata.resourceName'
    package: '@azure/arm-appcomplianceautomation'
    summary: Resource name.
    fullName: resourceName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceName?: string'
      return:
        description: ''
        type: string
  - name: resourceType
    uid: '@azure/arm-appcomplianceautomation.ResourceMetadata.resourceType'
    package: '@azure/arm-appcomplianceautomation'
    summary: Resource type.
    fullName: resourceType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceType?: string'
      return:
        description: ''
        type: string
  - name: tags
    uid: '@azure/arm-appcomplianceautomation.ResourceMetadata.tags'
    package: '@azure/arm-appcomplianceautomation'
    summary: Resource's tag type.
    fullName: tags
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tags?: {[propertyName: string]: string}'
      return:
        description: ''
        type: '{[propertyName: string]: string}'
