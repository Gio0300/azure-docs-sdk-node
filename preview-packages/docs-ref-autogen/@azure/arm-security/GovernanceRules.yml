### YamlMime:TSType
name: GovernanceRules
uid: '@azure/arm-security.GovernanceRules'
package: '@azure/arm-security'
summary: Interface representing a GovernanceRules.
fullName: GovernanceRules
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginRuleIdExecuteSingleSecurityConnector(string, string, string,
      GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams)
    uid: >-
      @azure/arm-security.GovernanceRules.beginRuleIdExecuteSingleSecurityConnector
    package: '@azure/arm-security'
    summary: Execute a security GovernanceRule on the given security connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRuleIdExecuteSingleSecurityConnector(resourceGroupName:
        string, securityConnectorName: string, ruleId: string, options?:
        GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams):
        Promise<PollerLike<PollOperationState<GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders>,
        GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: securityConnectorName
          type: string
          description: The security connector name.
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders"
          />&gt;, <xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders"
          />&gt;&gt;
  - name: >-
      beginRuleIdExecuteSingleSecurityConnectorAndWait(string, string, string,
      GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams)
    uid: >-
      @azure/arm-security.GovernanceRules.beginRuleIdExecuteSingleSecurityConnectorAndWait
    package: '@azure/arm-security'
    summary: Execute a security GovernanceRule on the given security connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginRuleIdExecuteSingleSecurityConnectorAndWait(resourceGroupName:
        string, securityConnectorName: string, ruleId: string, options?:
        GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams):
        Promise<GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: securityConnectorName
          type: string
          description: The security connector name.
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSecurityConnectorOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSecurityConnectorHeaders"
          />&gt;
  - name: >-
      beginRuleIdExecuteSingleSubscription(string,
      GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams)
    uid: '@azure/arm-security.GovernanceRules.beginRuleIdExecuteSingleSubscription'
    package: '@azure/arm-security'
    summary: Execute a security GovernanceRule on the given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRuleIdExecuteSingleSubscription(ruleId: string, options?:
        GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams):
        Promise<PollerLike<PollOperationState<GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders>,
        GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders>>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders"
          />&gt;, <xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders"
          />&gt;&gt;
  - name: >-
      beginRuleIdExecuteSingleSubscriptionAndWait(string,
      GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams)
    uid: >-
      @azure/arm-security.GovernanceRules.beginRuleIdExecuteSingleSubscriptionAndWait
    package: '@azure/arm-security'
    summary: Execute a security GovernanceRule on the given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRuleIdExecuteSingleSubscriptionAndWait(ruleId: string,
        options?: GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams):
        Promise<GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.GovernanceRulesRuleIdExecuteSingleSubscriptionHeaders"
          />&gt;
  - name: >-
      createOrUpdate(string, GovernanceRule,
      GovernanceRulesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-security.GovernanceRules.createOrUpdate'
    package: '@azure/arm-security'
    summary: Creates or update a security GovernanceRule on the given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(ruleId: string, governanceRule: GovernanceRule,
        options?: GovernanceRulesCreateOrUpdateOptionalParams):
        Promise<GovernanceRule>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: governanceRule
          type: <xref uid="@azure/arm-security.GovernanceRule" />
          description: GovernanceRule over a subscription scope
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceRulesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.GovernanceRule" />&gt;
  - name: delete(string, GovernanceRulesDeleteOptionalParams)
    uid: '@azure/arm-security.GovernanceRules.delete'
    package: '@azure/arm-security'
    summary: Delete a GovernanceRule over a given scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(ruleId: string, options?:
        GovernanceRulesDeleteOptionalParams): Promise<void>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: >-
            <xref uid="@azure/arm-security.GovernanceRulesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, GovernanceRulesGetOptionalParams)
    uid: '@azure/arm-security.GovernanceRules.get'
    package: '@azure/arm-security'
    summary: Get a specific governanceRule for the requested scope by ruleId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(ruleId: string, options?:
        GovernanceRulesGetOptionalParams): Promise<GovernanceRule>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: options
          type: <xref uid="@azure/arm-security.GovernanceRulesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.GovernanceRule" />&gt;
