### YamlMime:TSType
name: SubscriptionGovernanceRulesExecuteStatus
uid: '@azure/arm-security.SubscriptionGovernanceRulesExecuteStatus'
package: '@azure/arm-security'
summary: Interface representing a SubscriptionGovernanceRulesExecuteStatus.
fullName: SubscriptionGovernanceRulesExecuteStatus
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginGet(string, string,
      SubscriptionGovernanceRulesExecuteStatusGetOptionalParams)
    uid: '@azure/arm-security.SubscriptionGovernanceRulesExecuteStatus.beginGet'
    package: '@azure/arm-security'
    summary: >-
      Get a specific governanceRule execution status for the requested scope by
      ruleId and operationId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginGet(ruleId: string, operationId: string, options?:
        SubscriptionGovernanceRulesExecuteStatusGetOptionalParams):
        Promise<PollerLike<PollOperationState<ExecuteRuleStatus>,
        ExecuteRuleStatus>>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: operationId
          type: string
          description: >-
            The security GovernanceRule execution key - unique key for the
            execution of
                               GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SubscriptionGovernanceRulesExecuteStatusGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-security.ExecuteRuleStatus" />&gt;, <xref
          uid="@azure/arm-security.ExecuteRuleStatus" />&gt;&gt;
  - name: >-
      beginGetAndWait(string, string,
      SubscriptionGovernanceRulesExecuteStatusGetOptionalParams)
    uid: >-
      @azure/arm-security.SubscriptionGovernanceRulesExecuteStatus.beginGetAndWait
    package: '@azure/arm-security'
    summary: >-
      Get a specific governanceRule execution status for the requested scope by
      ruleId and operationId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginGetAndWait(ruleId: string, operationId: string, options?:
        SubscriptionGovernanceRulesExecuteStatusGetOptionalParams):
        Promise<ExecuteRuleStatus>
      parameters:
        - id: ruleId
          type: string
          description: >-
            The security GovernanceRule key - unique key for the standard
            GovernanceRule
        - id: operationId
          type: string
          description: >-
            The security GovernanceRule execution key - unique key for the
            execution of
                               GovernanceRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SubscriptionGovernanceRulesExecuteStatusGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.ExecuteRuleStatus" />&gt;
