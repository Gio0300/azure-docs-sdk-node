### YamlMime:TSType
name: DatabaseExtensionsOperations
uid: '@azure/arm-sql.DatabaseExtensionsOperations'
package: '@azure/arm-sql'
summary: Interface representing a DatabaseExtensionsOperations.
fullName: DatabaseExtensionsOperations
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, DatabaseExtensions,
      DatabaseExtensionsOperationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.DatabaseExtensionsOperations.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Perform a database extension operation, like polybase import
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, extensionName: string, parameters:
        DatabaseExtensions, options?:
        DatabaseExtensionsOperationsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ImportExportExtensionsOperationResult>,
        ImportExportExtensionsOperationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: extensionName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseExtensions" />
          description: The database import request parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabaseExtensionsOperationsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.ImportExportExtensionsOperationResult" />&gt;,
          <xref uid="@azure/arm-sql.ImportExportExtensionsOperationResult"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string,
      DatabaseExtensions,
      DatabaseExtensionsOperationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.DatabaseExtensionsOperations.beginCreateOrUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Perform a database extension operation, like polybase import
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serverName: string, databaseName: string, extensionName: string,
        parameters: DatabaseExtensions, options?:
        DatabaseExtensionsOperationsCreateOrUpdateOptionalParams):
        Promise<ImportExportExtensionsOperationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: extensionName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseExtensions" />
          description: The database import request parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabaseExtensionsOperationsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.ImportExportExtensionsOperationResult" />&gt;
  - name: >-
      get(string, string, string, string,
      DatabaseExtensionsOperationsGetOptionalParams)
    uid: '@azure/arm-sql.DatabaseExtensionsOperations.get'
    package: '@azure/arm-sql'
    summary: >-
      Gets a database extension. This will return resource not found as it is
      not supported.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, extensionName: string, options?:
        DatabaseExtensionsOperationsGetOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: extensionName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabaseExtensionsOperationsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      listByDatabase(string, string, string,
      DatabaseExtensionsOperationsListByDatabaseOptionalParams)
    uid: '@azure/arm-sql.DatabaseExtensionsOperations.listByDatabase'
    package: '@azure/arm-sql'
    summary: >-
      List database extension. This will return an empty list as it is not
      supported.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(resourceGroupName: string, serverName: string,
        databaseName: string, options?:
        DatabaseExtensionsOperationsListByDatabaseOptionalParams):
        PagedAsyncIterableIterator<ImportExportExtensionsOperationResult,
        ImportExportExtensionsOperationResult[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabaseExtensionsOperationsListByDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.ImportExportExtensionsOperationResult" />, <xref
          uid="@azure/arm-sql.ImportExportExtensionsOperationResult" />[],
          PageSettings&gt;
