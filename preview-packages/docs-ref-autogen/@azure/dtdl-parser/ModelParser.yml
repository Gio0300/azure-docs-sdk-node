### YamlMime:TSType
name: ModelParser
uid: '@azure/dtdl-parser.ModelParser'
package: '@azure/dtdl-parser'
summary: ''
fullName: ModelParser
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: getModels
    uid: '@azure/dtdl-parser.ModelParser.getModels'
    package: '@azure/dtdl-parser'
    summary: Retrieve one or more models based upon on or more provided dtmis.
    fullName: getModels
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getModels?: (dtmis: string, options?: GetModelsOptions) =>
        Promise<{[dtmi: string]: unknown}>
      return:
        description: ''
        type: >-
          (dtmis: string, options?: GetModelsOptions) =&gt; Promise&lt;{[dtmi:
          string]: unknown}&gt;
  - name: maxDtdlVersion
    uid: '@azure/dtdl-parser.ModelParser.maxDtdlVersion'
    package: '@azure/dtdl-parser'
    summary: ''
    fullName: maxDtdlVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxDtdlVersion?: number'
      return:
        description: ''
        type: number
  - name: options
    uid: '@azure/dtdl-parser.ModelParser.options'
    package: '@azure/dtdl-parser'
    summary: ''
    fullName: options
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'options: ModelParsingOption'
      return:
        description: ''
        type: <xref uid="@azure/dtdl-parser.ModelParsingOption" />
methods:
  - name: getSupplementalTypeCollection()
    uid: '@azure/dtdl-parser.ModelParser.getSupplementalTypeCollection'
    package: '@azure/dtdl-parser'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getSupplementalTypeCollection(): SupplementalTypeCollection'
      return:
        description: ''
        type: <xref uid="@azure/dtdl-parser.SupplementalTypeCollection" />
  - name: parse(string[])
    uid: '@azure/dtdl-parser.ModelParser.parse'
    package: '@azure/dtdl-parser'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function parse(jsonTexts: string[]): Promise<ModelDict>'
      parameters:
        - id: jsonTexts
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/dtdl-parser.ModelDict" />&gt;
